import t,{createContext as n,useRef as e,useContext as r,useState as i,useCallback as o,useEffect as a,useMemo as u}from"react";var l=function(){return l=Object.assign||function(t){for(var n,e=1,r=arguments.length;e<r;e++)for(var i in n=arguments[e])Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i]);return t},l.apply(this,arguments)},c=new(function(){function t(){this.e={}}return t.prototype.generateCallbackId=function(){return Math.random().toString(36).substring(7)},t.prototype.on=function(t,n,e){var r=this,i=this.e||(this.e={}),o=this.generateCallbackId(),a={id:o,fn:n,ctx:e};(i[t]||(i[t]=[])).push(a);return function(){r.off(t,o)}.bind(this)},t.prototype.once=function(t,n,e){var r=this,i=this.generateCallbackId();function o(){for(var o=[],a=0;a<arguments.length;a++)o[a]=arguments[a];r.off(t,i),n.apply(e,o)}return o._=n,this.on(t,o,e)},t.prototype.emit=function(t){for(var n=[],e=1;e<arguments.length;e++)n[e-1]=arguments[e];for(var r=((this.e||(this.e={}))[t]||[]).slice(),i=r.length,o=0;o<i;o++)r[o].fn.apply(r[o].ctx,n);return this},t.prototype.off=function(t,n,e){var r=this.e||(this.e={}),i=r[t],o=[];if(i&&n)for(var a=0,u=i.length;a<u;a++)("function"==typeof n&&i[a].fn!==n||"string"==typeof n&&i[a].id!==n)&&o.push(i[a]);return o.length?r[t]=o:delete r[t],this},t}()),f=n(null),s=function(n){var r=n.flagsmith,i=n.options,o=n.serverState,a=n.children,u=e(!0);return r&&!(null==r?void 0:r._trigger)&&(r._trigger=function(){r.log("React - trigger event received"),c.emit("event")}),r&&!(null==r?void 0:r._triggerLoadingState)&&(r._triggerLoadingState=function(){c.emit("loading_event")}),o&&!r.initialised&&r.setState(o),u.current&&(u.current=!1,i&&r.init(l(l({},i),{state:i.state||o,onChange:function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];i.onChange&&i.onChange.apply(i,t)}}))),t.createElement(f.Provider,{value:r},a)},g=function(t){var n=e(t);return n.current||(n.current=t),n.current},h=function(t){if("string"==typeof t)return[t];if("object"==typeof t&&t.hasOwnProperty("length"))return t;throw new Error("Flagsmith: please supply an array of strings or a single string of flag keys to useFlags")},v=function(t,n,e){return void 0===e&&(e=[]),n.map((function(n){return"".concat(t.getValue(n)).concat(t.hasFeature(n))})).concat(e.map((function(n){return"".concat(t.getTrait(n))}))).join(",")};function p(){var t=r(f),n=i(null==t?void 0:t.loadingState),u=n[0],l=n[1],s=i(!1),g=s[0],h=s[1],v=e(g),p=o((function(){l(null==t?void 0:t.loadingState)}),[t]);return v.current||(c.on("loading_event",p),v.current=!0),a((function(){return!g&&(null==t?void 0:t.initialised)&&(c.on("loading_event",p),h(!0)),function(){g&&c.off("loading_event",p)}}),[t,g,p]),u}function d(t,n){void 0===n&&(n=[]);var l=e(!0),s=g(h(t)),p=g(h(n)),d=r(f),y=i(v(d,s,p)),m=y[0],b=y[1],_=o((function(){var t=v(d,s,p);t!==m&&(null==d||d.log("React - useFlags flags and traits have changed"),b(t))}),[m]),w=e(c.once("event",_));return l.current&&(l.current=!1,null==d||d.log("React - Initialising event listeners")),a((function(){return function(){var t;null===(t=w.current)||void 0===t||t.call(w)}}),[]),u((function(){var t={};return s.map((function(n){t[n]={enabled:d.hasFeature(n),value:d.getValue(n)}})).concat(null==p?void 0:p.map((function(n){t[n]=d.getTrait(n)}))),t}),[m])}function y(){var t=r(f);if(!t)throw new Error("useFlagsmith must be used with in a FlagsmithProvider");return t}export{f as FlagsmithContext,s as FlagsmithProvider,d as useFlags,y as useFlagsmith,p as useFlagsmithLoading};
//# sourceMappingURL=react.mjs.map
